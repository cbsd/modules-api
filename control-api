#!/usr/local/bin/cbsd
#v13.0.1
DIST_MODULE_PATH="${distmoduledir}/api.d"
MYOPTARG="imgsize jname img ram cpus pubkey host_hostname"
MYARG="mode"
MYDESC="Operate with jail via API"
CBSDMODULE="sys"
ADDHELP="
${H3_COLOR}Description${N0_COLOR}:

Extra helper for jail creation via API

${H3_COLOR}General Options${N0_COLOR}:

${H3_COLOR}Examples${N0_COLOR}:

${H3_COLOR}See also${N0_COLOR}:

"
EXTHELP="wf_bhyve"
MODULE_PATH="${dbdir}/bhyve"

. ${subrdir}/nc.subr

ip4_addr=
. ${cbsdinit}
. ${subrdir}/system.subr
. ${subrdir}/strings.subr

readconf api.conf

set -e
. ${distmoduledir}/api.d/api.subr
set +e
MY_LOG="${cbsd_api_logdir}/contol-api.log"
log "wakeup: [workdir: ${workdir}, cbsdworkdir: ${cbsd_workdir}, api_postcreate_hook: ${api_postcreate_hook}, cbsd_api_dbdir: ${cbsd_api_dbdir}]: $*"

destroy_env()
{
	${FIND_CMD} ${cbsd_api_dbdir}/ -type d -name vms | while read _dir; do
		if [ -r ${_dir}/${jname} ]; then
			cid=$( ${REALPATH_CMD} ${_dir}/${jname} | ${CUT_CMD} -d / -f 5 )
			echo "${RM_CMD} -f ${_dir}/${jname} ${_dir}/../${jname}-bhyve.ssh ${_dir}/../${jname}.node" | tee -a ${MY_LOG}
			${RM_CMD} -f ${_dir}/${jname} ${_dir}/../${jname}-bhyve.ssh ${_dir}/../${jname}.node
			[ -n "${api_postdestroy_hook}" -a -x "${api_postdestroy_hook}" ] && ${api_postdestroy_hook} -c "${cid}" -j "${jname}" -m destroy -r "${cbsd_api_dbdir}" -w "${cbsd_workdir}"
		fi
	done
}

. ${subrdir}/rcconf.subr
if [ $? -eq 1 ]; then
	log "no such env: ${jname}"
	destroy_env
	err 1 "${N1_COLOR}no such env: ${N2_COLOR}${jname}${N0_COLOR}"
fi

case "${emulator}" in
	bhyve)
		start_cmd="bstart"
		stop_cmd="bstop"
		destroy_cmd="bdestroy"
		;;
	jail)
		start_cmd="jstart"
		stop_cmd="jstop"
		destroy_cmd="jdestroy"
		;;
	*)
		log "unknown emulator for ${jname}: ${emulator}"
		err 1 "unknown emulator ${jname}: ${emulator}"
		;;
esac

## MAIN
case "${mode}" in
	stop)
		log "stop ${jname} via ${stop_cmd}"
		${stop_cmd} jname=${jname}
		;;
	start)
		log "start ${jname} via ${start_cmd}"
		${start_cmd} jname=${jname}
		;;
	destroy)
		log "destroy ${jname} via ${destroy_cmd}"
		${destroy_cmd} jname=${jname}
		destroy_env
		;;
esac

# temporary hack/mock for standalone no-DB API version
[ -x /root/bin/tubestat.sh ] && /root/bin/tubestat.sh > /dev/null 2>&1
[ -x /root/bin/update_cluster_status.sh ] && /root/bin/update_cluster_status.sh > /dev/null 2>&1

exit 0
