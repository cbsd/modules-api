#!/usr/local/bin/cbsd
#v13.0.1
DIST_MODULE_PATH="${distmoduledir}/api.d"
MYOPTARG="imgsize jname img ram cpus pubkey host_hostname ver"
MYARG="mode"
MYDESC="Operate with jail via API"
CBSDMODULE="sys"
ADDHELP="\
"
EXTHELP="wf_bhyve"
MODULE_PATH="${dbdir}/bhyve"

. ${subr}
ip4_addr=
. ${cbsdinit}
. ${system}
. ${strings}

readconf api.conf
readconf jail-api.conf

[ -z "${ver}" ] && ver="native"

set -e
. ${distmoduledir}/api.d/api.subr
set +e
MY_LOG="${cbsd_api_logdir}/jail-api.log"
log "wakeup: $*"

create_env()
{
	local ssh_user="root"		# always root for jail
	local ssh_port=
	local ssh_host=

	[ -z "${ssh_host}" ] && ssh_host="${nodeip}"
	[ -z "${ssh_user}" ] && err 1 "ssh_user empty? check img/mapping in bhyve-api.conf for: ${img}"

	ip4_addr=$( dhcpd ip4pool=${ip4pool} )

	# additional check for profile/type?

	cid=$( ${MD5_CMD} -qs "${pubkey}" )

	if [ ! -d ${cbsd_api_dbdir}/${cid} ]; then
		${MKDIR_CMD} -m 0770 -p ${cbsd_api_dbdir}/${cid}
		${CHOWN_CMD} ${cbsduser}:${cbsduser} ${cbsd_api_dbdir}/${cid}
	fi
	if [ ! -d ${cbsd_api_dbdir}/${cid}/.ssh ]; then
		${MKDIR_CMD} -m 0770 -p ${cbsd_api_dbdir}/${cid}/.ssh
		${CHOWN_CMD} ${cbsduser}:${cbsduser} ${cbsd_api_dbdir}/${cid}/.ssh
	fi
	if [ ! -r ${cbsd_api_dbdir}/${cid}/.ssh/authorized_keys ]; then
		echo "${pubkey}" > ${cbsd_api_dbdir}/${cid}/.ssh/authorized_keys
		${CHOWN_CMD} ${cbsduser}:${cbsduser} ${cbsd_api_dbdir}/${cid}/.ssh/authorized_keys
		sync
		#fflush?
		sleep 1
	fi
	if [ ! -d ${cbsd_api_dbdir}/${cid}/vms ]; then
		${MKDIR_CMD} -m 0770 -p ${cbsd_api_dbdir}/${cid}/vms
		${CHOWN_CMD} ${cbsduser}:${cbsduser} ${cbsd_api_dbdir}/${cid}/vms
	fi

	if [ -n "${pkglist}" ]; then
		pkg_bootstrap="1"
	else
		pkg_bootstrap="0"
	fi

	str="cbsd jcreate \
		jname=${jname} \
		host_hostname=\"${jname}.my.domain\" \
		runasap=1 \
		ip4_addr=\"${ip4_addr}\" \
		ver=\"${ver}\" \
		fsquota=\"${imgsize}\" \
		ci_user_pubkey=\"${cbsd_api_dbdir}/${cid}/.ssh/authorized_keys\" \
		pkg_bootstrap="${pkg_bootstrap}" \
		pkglist=\"${pkglist}\" \
		"

	log "exec [${str}]"
	${str}

	if [ "${nodeip_expose}" = "0" ]; then
		port=22
		ssh_host="${ip4_addr}"
	else
		jname_id=$( echo ${jname} | ${TR_CMD} -d 'env' )
		port=$(( jname_id + 4000 ))
		log "expose mode=add jname=${jname} in=${port} out=22"
		expose mode=add jname=${jname} in=${port} out=22 >> ${MY_LOG}
	fi

	cpus=1
	ram="1g"

	echo $( hostname ) > ${cbsd_api_dbdir}/${cid}/${jname}.node

	if is_number "${imgsize}"; then
		if conv2bytes ${imgsize}; then
			imgsize_bytes="${convval}"
		else
			imgsize_bytes="0"
		fi
	else
		# already on bytes?
		imgsize_bytes="${imgsize}"
	fi

	if is_number "${ram}"; then
		if conv2bytes ${ram}; then
			ram_bytes="${convval}"
		else
			ram_bytes="0"
		fi
	else
		# already on bytes?
		ram_bytes="${ram}"
	fi

	create_time=$( ${DATE_CMD} -u "+%Y-%m-%dT%H:%M:%S" )

	${CAT_CMD} > ${cbsd_api_dbdir}/${cid}/${jname}-bhyve.ssh <<EOF
{
  "type": "container",
  "is_power_on": true,
  "created": "${create_time}",
  "cpus": ${cpus},
  "ram_bytes": ${ram_bytes},
  "ram_human": "${ram}",
  "imgsize_bytes": ${imgsize_bytes},
  "imgsize_human": "${imgsize}",
  "ssh_user": "${ssh_user}",
  "ssh_host": "${ssh_host}",
  "ssh_port": ${port},
  "ssh_string": "ssh ${ssh_user}@${ssh_host} -p${port}"
}
EOF
	# dup to param-values
	${CAT_CMD} > ${cbsd_api_dbdir}/${cid}/vms/${jname} <<EOF
jname="${jname}"
host_hostname="${host_hostname}"
ver="${ver}"
type="container"
is_power_on="true"
created="${create_time}"
cpus="${cpus}"
ram_bytes="${ram_bytes}"
ram_human="${ram}"
imgsize_bytes="${imgsize_bytes}"
imgsize_human="${imgsize}"
ssh_user="${ssh_user}"
ssh_host="${ssh_host}"
ssh_port="${port}"
ssh_string="ssh ${ssh_user}@${ssh_host} -p${port}"
EOF

#	echo "${host_hostname} (jail:${ver}) ${cpus}/${ram}/${imgsize} ssh ${ssh_user}@${ssh_host} -p${port}" > ${cbsd_api_dbdir}/${cid}/vms/${jname}


	#echo -n "ssh ${ssh_user}@${ssh_host} -p${port}" > ${cbsd_api_dbdir}/${cid}/${jname}-bhyve.ssh
	${CHOWN_CMD} ${cbsduser}:${cbsduser} ${cbsd_api_dbdir}/${cid}/vms/${jname} ${cbsd_api_dbdir}/${cid}/${jname}.node ${cbsd_api_dbdir}/${cid}/${jname}-bhyve.ssh

	[ -n "${api_postcreate_hook}" -a -x "${api_postcreate_hook}" ] && ${api_postcreate_hook} -c ${cid} -j ${jname} -m create -r ${cbsd_api_dbdir}
}

## MAIN
case "${mode}" in
	create)
		create_env
		;;
esac

exit 0
